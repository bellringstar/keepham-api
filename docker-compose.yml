version: "3"

networks:
  my_network:
    driver: bridge

services:
  zookeeper-1:
    image: confluentinc/cp-zookeeper:7.1.0
    container_name: zookeeper-1
    environment:
      ZOOKEEPER_SERVER_ID: 1
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"
    networks:
      - my_network

  zookeeper-2:
    image: confluentinc/cp-zookeeper:7.1.0
    container_name: zookeeper-2
    environment:
      ZOOKEEPER_SERVER_ID: 2
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2182:2181"
    networks:
      - my_network

  zookeeper-3:
    image: confluentinc/cp-zookeeper:7.1.0
    container_name: zookeeper-3
    environment:
      ZOOKEEPER_SERVER_ID: 3
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2183:2181"
    networks:
      - my_network

  kafka-1:
    image: confluentinc/cp-kafka:7.1.0
    container_name: kafka-1
    depends_on:
      - zookeeper-1
      - zookeeper-2
      - zookeeper-3
    ports:
      - "9092:9092"
      - "19092:19092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper-1:2181,zookeeper-2:2181,zookeeper-3:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka-1:9092,PLAINTEXT_HOST://localhost:19092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 2
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
    networks:
      - my_network

  kafka-2:
    image: confluentinc/cp-kafka:7.1.0
    container_name: kafka-2
    depends_on:
      - zookeeper-1
      - zookeeper-2
      - zookeeper-3
    ports:
      - "9093:9092"
      - "19093:19093"
    environment:
      KAFKA_BROKER_ID: 2
      KAFKA_ZOOKEEPER_CONNECT: zookeeper-1:2181,zookeeper-2:2181,zookeeper-3:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka-2:9092,PLAINTEXT_HOST://localhost:19093
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 2
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
    networks:
      - my_network

  kafka-3:
    image: confluentinc/cp-kafka:7.1.0
    container_name: kafka-3
    depends_on:
      - zookeeper-1
      - zookeeper-2
      - zookeeper-3
    ports:
      - "9094:9092"
      - "19094:19094"
    environment:
      KAFKA_BROKER_ID: 3
      KAFKA_ZOOKEEPER_CONNECT: zookeeper-1:2181,zookeeper-2:2181,zookeeper-3:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka-3:9092,PLAINTEXT_HOST://localhost:19094
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 2
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
    networks:
      - my_network

  mongodb1:
    image: mongo
    container_name: mongodb1
    restart: always
    hostname: mongodb1
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: root"
      MONGO_INITDB_ROOT_PASSWORD: 1234
      MONGO_INITDB_DATABASE: keepham
    volumes:
      - ./init-mongo/init-mongo.js:/docker-entrypoint-initdb.d/init-mongo.js
    command: >
      bash -c 'mongod --replSet rs0 --bind_ip_all'
    networks:
      - my_network

  mongodb2:
    image: mongo
    container_name: mongodb2
    restart: always
    hostname: mongodb2
    ports:
      - "27018:27018"
    environment:
      MONGO_INITDB_DATABASE: keepham
    volumes:
      - ./init-mongo/init-mongo.js:/docker-entrypoint-initdb.d/init-mongo.js
    command: >
      bash -c 'mongod --replSet rs0 --bind_ip_all --port 27018'
    networks:
      - my_network

  mongodb3:
    image: mongo
    container_name: mongodb3
    restart: always
    hostname: mongodb3
    ports:
      - "27019:27019"
    environment:
      MONGO_INITDB_DATABASE: keepham
    volumes:
      - ./init-mongo/init-mongo.js:/docker-entrypoint-initdb.d/init-mongo.js
    # command: >
    #   bash -c 'mongod --replSet rs0 --keyFile /etc/mongo-keyfile --bind_ip_all'
    command: >
      bash -c 'mongod --replSet rs0 --bind_ip_all --port 27019'
    networks:
      - my_network

  mysql:
    image: mysql:8.0
    container_name: mysql
    restart: always
    ports:
      - "43306:3306"
    environment:
      MYSQL_ROOT_PASSWORD: 1234
    command:
      - --character-set-server=utf8mb4
      - --collation-server=utf8mb4_unicode_ci
    volumes:
      - /var/lib/mysql
    networks:
      - my_network

  redis:
    image: redis:alpine
    command: redis-server --port 6379
    container_name: redis
    restart: always
    hostname: redis
    labels:
      - "name=redis"
      - "mode=standalone"
    ports:
      - "46379:6379"
    networks:
      - my_network

  akhq:
    image: tchiotludo/akhq
    container_name: akhq
    environment:
      AKHQ_CONFIGURATION: |
        akhq:
          server:
            access-log: true
            base-path: /
          connections:
            kafka-cluster:
              properties:
                bootstrap.servers: "kafka-1:9092,kafka-2:9092,kafka-3:9092"
    ports:
      - "9999:8080"
    networks:
      - my_network
    depends_on:
      - kafka-1
      - kafka-2
      - kafka-3


